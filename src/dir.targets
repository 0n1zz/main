<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\dir.targets" />

  <PropertyGroup>
    <!-- Don't copy NuGet implementations directly, since that would require setting a runtime and targeting a specific architecture.
         Instead, it they will be deployed by DeployDependencies.proj. -->
    <CopyNuGetImplementations>false</CopyNuGetImplementations>
  </PropertyGroup>
  
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" Condition="('$(NetCoreBuild)' != 'true' or '$(OsEnvironment)'!='Windows_NT') and Exists('$(MSBuildToolsPath)\Microsoft.CSharp.targets')"/>  
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" Condition="'$(NetCoreBuild)' == 'true' and '$(OsEnvironment)'=='Windows_NT'"/>

  <!-- OSS sign assemblies after compile runs. -->
  <Import Condition="Exists('$(ToolsDir)\sign.targets')" Project="$(ToolsDir)\sign.targets" />

  <!-- Use NuSpec.ReferenceGenerator to create / update the .NET Core dependencies of the packages -->
  <Import Condition="Exists('$(NuSpecReferenceGeneratorDir)\NuSpec.ReferenceGenerator.targets')"  Project="$(NuSpecReferenceGeneratorDir)\NuSpec.ReferenceGenerator.targets"/>

  <Import Condition="'$(OsEnvironment)'!='Windows_NT'" Project="$(NugetIntegrationDir)\Microsoft.NuGet.targets" />
  <Import Condition="Exists('../override.targets') and '$(OsEnvironment)'!='Windows_NT'" Project="../override.targets" />

  <!-- Debugging support -->
  <PropertyGroup Condition="'$(NetCoreBuild)' == 'true'">
    <DebugEngines>{2E36F1D4-B23C-435D-AB41-18E608940038}</DebugEngines>
    <TestHost Condition="'$(OS)' == 'Windows_NT'">CoreRun.exe</TestHost>
    <TestHost Condition="'$(OS)' != 'Windows_NT'">corerun</TestHost>
    <StartProgram Condition="'$(StartProgram)'==''">$(OutputPath)\$(TestHost)</StartProgram>
    <StartArguments>msbuild.exe</StartArguments>
  </PropertyGroup>


  <PropertyGroup Condition="'$(NetCoreBuild)' == 'true' And '$(IsTestProject)'=='true'">
    <StartArguments>xunit.console.netcore.exe $(TargetFileName)</StartArguments>
    <StartAction>Program</StartAction>
  </PropertyGroup>

  <PropertyGroup Condition="'$(NetCoreBuild)' == 'true'">
    <NuGetTargetMoniker>DNXCore,Version=v5.0</NuGetTargetMoniker>
  </PropertyGroup>

</Project>
